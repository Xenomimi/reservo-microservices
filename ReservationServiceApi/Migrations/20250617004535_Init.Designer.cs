// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReservationServiceApi;

#nullable disable

namespace ReservationServiceApi.Migrations
{
    [DbContext(typeof(ReservationDbContext))]
    [Migration("20250617004535_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReservationServiceApi.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerExternalId")
                        .HasColumnType("integer");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ReservationCartId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReservationEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ReservationStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("ReservationCartId");

                    b.ToTable("Reservation", "Reservo");
                });

            modelBuilder.Entity("ReservationServiceApi.Entities.ReservationCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerExternalId")
                        .HasColumnType("integer");

                    b.Property<decimal>("DiscountApplied")
                        .HasColumnType("numeric");

                    b.Property<string>("PromoCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReservationCart", "Reservo");
                });

            modelBuilder.Entity("ReservationServiceApi.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("numeric");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("integer");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("integer");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.HasIndex("RoomNumber")
                        .IsUnique();

                    b.ToTable("Room", "Reservo");
                });

            modelBuilder.Entity("ReservationServiceApi.Entities.Reservation", b =>
                {
                    b.HasOne("ReservationServiceApi.Entities.ReservationCart", "Cart")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservationCartId");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("ReservationServiceApi.Entities.Room", b =>
                {
                    b.HasOne("ReservationServiceApi.Entities.Reservation", null)
                        .WithMany("Rooms")
                        .HasForeignKey("ReservationId");
                });

            modelBuilder.Entity("ReservationServiceApi.Entities.Reservation", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("ReservationServiceApi.Entities.ReservationCart", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
